version: '3'
services:
  web:
    container_name: mccs
    build:
      context: .
      dockerfile: dockerfile.dev
    volumes:
      - ./:/usr/src/app
    ports:
      - 8080:8080
    depends_on:
      
      - mongo
      - redis
      - postgres
      - es01

  postgres:
    container_name: postgres
    image: postgres:11.15
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mccs
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgresql:/var/lib/postgresql/data

  mongo:
    container_name: mongo
    image: mongo:4.2.18
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db

  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - 6379:6379
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - redis:/data

  es01:
    container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    environment:
      - node.name=es01
      - cluster.initial_master_nodes=es01
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ports:
      - 9200:9200
    volumes:
      - esdata01:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.8.1
    environment:
      - ELASTICSEARCH_HOSTS=http://es01:9200
    ports:
      - 5601:5601
    depends_on:
      - es01

volumes:
  postgresql:
  mongodb:
  redis:
  esdata01:
